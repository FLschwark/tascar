if (LIBXML++_INCLUDE_DIRS AND LIBXML++_INCLUDE_DIRS)
    set(LIBXML++_FOUND TRUE)
else ()
    IF (LIBXML++_FIND_REQUIRED)
        find_package(Glibmm REQUIRED)
        find_package(LibXml2 REQUIRED)
    ELSE (LIBXML++_FIND_REQUIRED)
        find_package(Glibmm)
        find_package(LibXml2)
    ENDIF (LIBXML++_FIND_REQUIRED)

    IF (GLIBMM_FOUND AND LIBXML2_FOUND)

        #use pkg-config
        find_package(PkgConfig)
        pkg_check_modules(PC_LIBXMLPP QUIET libxml++-2.6)

        find_path(LIBXML++_INCLUDE_DIR NAMES LIBXML++/LIBXML++.h HINTS ${PC_LIBXMLPP_INCLUDEDIR} ${PC_LIBXMLPP_INCLUDE_DIRS})
        find_path(LIBXML++_config_INCLUDE_DIR NAMES LIBXML++config.h HINTS ${PC_LIBXMLPP_INCLUDEDIR} ${PC_LIBXMLPP_INCLUDE_DIRS})
        find_library(LIBXML++_LIBRARY NAMES xml++ xml++-2.6 HINTS ${PC_LIBXMLPP_LIBDIR} ${PC_LIBXMLPP_LIBRARY_DIRS})

        set(LIBXML++_LIBRARIES ${LIBXML++_LIBRARY} ${PC_LIBXMLPP_PKGCONF_LIBRARIES} ${GLIBMM_LIBRARIES} ${LIBXML2_LIBRARIES})
        IF (LIBXML++_config_INCLUDE_DIR)
            set(LIBXML++_INCLUDE_DIRS ${LIBXML++_INCLUDE_DIR} ${PC_LIBXMLPP_PKGCONF_INCLUDE_DIRS} ${LIBXML++_config_INCLUDE_DIR} ${GLIBMM_INCLUDE_DIRS} ${LIBXML2_INCLUDE_DIR})
        ELSE (LIBXML++_config_INCLUDE_DIR)
            set(LIBXML++_INCLUDE_DIRS ${LIBXML++_INCLUDE_DIR} ${PC_LIBXMLPP_PKGCONF_INCLUDE_DIRS} ${GLIBMM_INCLUDE_DIRS} ${LIBXML2_INCLUDE_DIR})
        ENDIF (LIBXML++_config_INCLUDE_DIR)

    ENDIF (GLIBMM_FOUND AND LIBXML2_FOUND)

    INCLUDE(FindPackageHandleStandardArgs)
    FIND_PACKAGE_HANDLE_STANDARD_ARGS(LibXml++ DEFAULT_MSG LIBXML++_LIBRARY LIBXML++_INCLUDE_DIR)

    MARK_AS_ADVANCED(LIBXML++_INCLUDE_DIR LIBXML++_config_INCLUDE_DIR LIBXML++_LIBRARY)
endif ()

